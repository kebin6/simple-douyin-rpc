// Code generated by goctl. DO NOT EDIT.
// Source: douyin.proto

package server

import (
	"context"

	"github.com/kebin6/simple-douyin-rpc/internal/logic/base"
	"github.com/kebin6/simple-douyin-rpc/internal/logic/dyApi"
	"github.com/kebin6/simple-douyin-rpc/internal/svc"
	"github.com/kebin6/simple-douyin-rpc/types/douyin"
)

type DouyinServer struct {
	svcCtx *svc.ServiceContext
	douyin.UnimplementedDouyinServer
}

func NewDouyinServer(svcCtx *svc.ServiceContext) *DouyinServer {
	return &DouyinServer{
		svcCtx: svcCtx,
	}
}

func (s *DouyinServer) InitDatabase(ctx context.Context, in *douyin.Empty) (*douyin.BaseResp, error) {
	l := base.NewInitDatabaseLogic(ctx, s.svcCtx)
	return l.InitDatabase(in)
}

func (s *DouyinServer) GetSignature(ctx context.Context, in *douyin.SignatureReq) (*douyin.SignatureResp, error) {
	l := dyApi.NewGetSignatureLogic(ctx, s.svcCtx)
	return l.GetSignature(in)
}

func (s *DouyinServer) GetAccessToken(ctx context.Context, in *douyin.AccessTokenReq) (*douyin.AccessTokenResp, error) {
	l := dyApi.NewGetAccessTokenLogic(ctx, s.svcCtx)
	return l.GetAccessToken(in)
}
